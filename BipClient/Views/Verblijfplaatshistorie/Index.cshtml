@model IEnumerable<Bip.Verblijfplaatshistorie>

@{
    ViewData["Title"] = "Verblijfplaatshistorie";

    Object ReturnProp(String name, Object obj)
    {
        foreach (String part in name.Split(' '))
        {
            if (obj == null) { return null; }

            Type type = obj.GetType();
            var info = type.GetProperty(part);
            if (info == null) { return null; }

            obj = info.GetValue(obj, null);
        }

        return obj;
    }

    IEnumerable<object> ReturnIEnumerable(object obj)
    {
        return ((IEnumerable<object>)obj).Cast<object>().ToList();
    }

}

<script type="text/javascript">

    function colorRelevant(id) {

        $(".searchBox").css("border", "1px solid black").css("background", "white");;

        if (id === "bsnZoek") {
            $("#bsnZoek").css("border", "2px solid green").css("background", "lightgreen");
        }
    };

</script>

<script type="text/javascript">

    $(document).ready(function () {
        var aantal = 0
        $('table tbody').each(function () {
            //var num = $(this).children().length;
            // alert(num);
            aantal++;
            $(this).before("<button id='header' class='header' style:'cursor:pointer;'> Resultaat " + aantal + " </button>");
            //alert($(this).html());
            $(this).hide();
        });
        $('.header').on('click', function () {
            $(this).next().slideToggle("slow");
        });
    });

</script>

<h2>Verblijfplaatshistorie</h2>

@using (Html.BeginForm("Zoek", "Verblijfplaatshistorie", FormMethod.Post))
{
    <form>
        <div>
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="apiVersion" id="apiVersionZoek" name="apiVersionZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="fields" id="fieldsZoek" name="fieldsZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="bsn" id="bsnZoek" name="bsnZoek" required>
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="date" placeholder="peilDatum" id="peilDatumZoek" name="peilDatumZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="date" placeholder="periodeVan" id="periodeVanZoek" name="periodeVanZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="date" placeholder="periodeTot" id="periodeTotZoek" name="periodeTotZoek">

            <button type="submit">Zoek</button>

        </div>
    </form>
}

<div>
    Het ophalen van de verblijfplaatshistorie van een ingeschreven persoon.<br /> 
    Van een ingeschreven persoon wordt de verblijfplaats geretourneerd waar de persoon op de (optioneel) opgegeven peildatum verbleef of worden de verblijfplaatsen geretourneerd 
    waar de persoon binnen de (optioneel) opgegeven periode (periodevan tot periodetot) heeft verbleven. 
    Wanneer geen peildatum of periode wordt opgegeven, worden alle verblijfplaatsen waar de persoon verbleven heeft of nu verblijft teruggegeven.<br /><br/>

    Er wordt aflopend gesorteerd op datumAanvangAdreshuishouding, zodat de meest actuele bovenaan staat.
</div>


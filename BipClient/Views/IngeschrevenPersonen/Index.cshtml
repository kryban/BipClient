@model IEnumerable<Bip.IngeschrevenPersoon>

@{
    ViewData["Title"] = "IngeschrevenPersoon";

    Object ReturnProp(String name, Object obj)
    {
        foreach (String part in name.Split(' '))
        {
            if (obj == null) { return null; }

            Type type = obj.GetType();
            var info = type.GetProperty(part);
            if (info == null) { return null; }

            obj = info.GetValue(obj, null);
        }

        return obj;
    }

    IEnumerable<object> ReturnIEnumerable(object obj)
    {
        return ((IEnumerable<object>)obj).Cast<object>().ToList();
    }

}

<script type="text/javascript">

    function colorRelevant(id) {

        $(".searchBox").css("border", "1px solid black").css("background", "white");;

        if (id === "geboorteDatumZoek" || id === "geslachtsnaamZoek") {
            $("#geboorteDatumZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#geslachtsnaamZoek").css("border", "2px solid green").css("background", "lightgreen");
        }

        if (id === "gemeentevaninschrijvingZoek" || id === "geslachtsnaamZoek") {
            $("#gemeentevaninschrijvingZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#geslachtsnaamZoek").css("border", "2px solid green").css("background", "lightgreen");
        }

        if (id === "postcodeZoek" || id === "huisnummerZoek") {
            $("#postcodeZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#huisnummerZoek").css("border", "2px solid green").css("background", "lightgreen");
        }

        if (id === "bsnZoek") {
            $("#bsnZoek").css("border", "2px solid green").css("background", "lightgreen");
        }

        if (id === "gemeentevaninschrijvingZoek" || id === "naamopenbareruimteZoek"|| id === "huisnummerZoek") {
            $("#gemeentevaninschrijvingZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#naamopenbareruimteZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#huisnummerZoek").css("border", "2px solid green").css("background", "lightgreen");

        }

        if (id === "identificatiecodenummeraanduidingZoek") {
            $("#identificatiecodenummeraanduidingZoek").css("border", "2px solid green").css("background", "lightgreen");
        }
    };   

</script>

<script type="text/javascript">

    $(document).ready(function () {
        var aantal = 0
        $('table tbody').each(function () {
            //var num = $(this).children().length;
            // alert(num);
            aantal++;
            $(this).before("<button id='header' class='header' style:'cursor:pointer;'> Resultaat " + aantal + " </button>");
            //alert($(this).html());
            $(this).hide();
        });
        $('.header').on('click', function () {
            $(this).next().slideToggle("slow");
        });
    });

</script>

<h2>IngeschrevenPersonen</h2>

@using (Html.BeginForm("Zoek", "IngeschrevenPersonen", FormMethod.Post))
{
    <form>
        <div>
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="apiVersion" id="apiVersionZoek" name="apiVersionZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="expand" id="expandZoek" name="expandZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="fields" id="fieldsZoek" name="fieldsZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="bsn" id="bsnZoek" name="bsnZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="date" placeholder="geboortedatum" id="geboorteDatumZoek" name="geboorteDatumZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="geboorteplaats" id="geboorteplaatsZoek" name="geboorteplaatsZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="number" placeholder="geslachtsaanduiding" id="geslachtsaanduidingZoek" name="geslachtsaanduidingZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="checkbox" title="inclOverleden" placeholder="inclusiefoverledenpersonen" id="inclusiefoverledenpersonenZoek" name="inclusiefoverledenpersonenZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="geslachtsnaam" id="geslachtsnaamZoek" name="geslachtsnaamZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="voornamen" id="voornamenZoek" name="voornamenZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="gemeentevaninschrijving(code)" id="gemeentevaninschrijvingZoek" name="gemeentevaninschrijvingZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="huisletter" id="huisletterZoek" name="huisletterZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="number" placeholder="huisnummer" id="huisnummerZoek" name="huisnummerZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="huisnummertoevoeging" id="huisnummertoevoegingZoek" name="huisnummertoevoegingZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="identificatiecodenummeraanduiding" id="identificatiecodenummeraanduidingZoek" name="identificatiecodenummeraanduidingZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="naamopenbareruimte" id="naamopenbareruimteZoek" name="naamopenbareruimteZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="postcode" id="postcodeZoek" name="postcodeZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="voorvoegsel" id="voorvoegselZoek" name="voorvoegselZoek">

            @*<input type="text" placeholder="geslachtsnaam" id="search-fld" name="geslachtsNaamZoek">*@

            <button type="submit">
                <i class="fa fa-search">Zoek</i>
            </button>

        </div>
    </form>
}<div>
    De bovenstaande combinaties van parameters mogen gecombineerd worden met de overige beschikbare query-parameters, maar binnen iedere combinatie zijn de hier genoemde velden verplicht.
    Default levert een zoekvraag alleen personen op die nog in leven zijn. Indien inclusiefoverledenpersonen de waarde true heeft worden overleden personen opgenomen in het zoekresultaat.
    Het maximale aantal zoekresultaten dat geretourneerd wordt is aan de provider om te bepalen. Als het resultaat van de de request dit aantal overtreft worden er geen resultaten geretourneerd en volgt er een foutmelding.
    Er vind geen sortering plaats.
</div>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayName("-")</th>
        </tr>
    </thead>
    <tbody>
        <br />

        @foreach (var mod in Model)
        {
            @foreach (var prop in typeof(Bip.IngeschrevenPersoon).GetProperties().ToList())
            {
                <tr>
                    <td style="font-weight:600">@Html.DisplayFor(m => prop.Name)</td>
                    <td>@prop.GetValue(mod)</td>
                </tr>

                if ((!prop.PropertyType.Namespace.StartsWith("System") || prop.PropertyType.Namespace.Contains("Collection")) && !prop.PropertyType.Name.Contains("IDictionary"))
                {
                    @foreach (var d in prop.PropertyType.GetProperties().ToList())
                    {
                        var propObj = @ReturnProp(prop.Name, mod);
                        Object propVal = null;

                        if (prop.PropertyType.Name.Contains("Collection"))
                        {
                            var foo = @prop.GetValue(mod);
                            if (foo != null)
                            {
                                var bar = ReturnIEnumerable(foo);

                                foreach (var b in bar)
                                {
                                    foreach (var subTypeProp in b.GetType().GetProperties().ToList())
                                    {
                                        <tr>
                                            <td style="color:lightslategray; font-size:80%"><i>@Html.DisplayFor(m => subTypeProp.Name)</i></td>
                                            <td style="color:lightslategray; font-size:80%">@subTypeProp.GetValue(b)</td>
                                        </tr>
                                    }
                                }
                            }
                        }

                        else if (propObj != null)
                        {
                            propVal = propObj.GetType().GetProperty(d.Name).GetValue(propObj, null);
                        }

                        <tr>
                            <td><i>@Html.DisplayFor(m => d.Name)</i></td>
                            <td>@propVal</td>
                        </tr>
                    }
                }
            }
        }
    </tbody>
</table>

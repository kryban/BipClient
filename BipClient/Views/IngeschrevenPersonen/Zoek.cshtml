@model IEnumerable<Bip.IngeschrevenPersoon>

@{
    ViewData["Title"] = "IngeschrevenPersoon Resultaat";

    Object ReturnProp(String name, Object obj)
    {
        foreach (String part in name.Split(' '))
        {
            if (obj == null) { return null; }

            Type type = obj.GetType();
            var info = type.GetProperty(part);
            if (info == null) { return null; }

            obj = info.GetValue(obj, null);
        }

        return obj;
    }

    IEnumerable<object> ReturnIEnumerable(object obj)
    {
        return ((IEnumerable<object>)obj).Cast<object>().ToList();
    }
}

<script type="text/javascript">

    function colorRelevant(id) {

        $(".searchBox").css("border", "1px solid black").css("background", "white");;

        if (id === "geboorteDatumZoek" || id === "geslachtsnaamZoek") {
            $("#geboorteDatumZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#geslachtsnaamZoek").css("border", "2px solid green").css("background", "lightgreen");
        }

        if (id === "gemeentevaninschrijvingZoek" || id === "geslachtsnaamZoek") {
            $("#gemeentevaninschrijvingZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#geslachtsnaamZoek").css("border", "2px solid green").css("background", "lightgreen");
        }

        if (id === "postcodeZoek" || id === "huisnummerZoek") {
            $("#postcodeZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#huisnummerZoek").css("border", "2px solid green").css("background", "lightgreen");
        }

        if (id === "bsnZoek") {
            $("#bsnZoek").css("border", "2px solid green").css("background", "lightgreen");
        }

        if (id === "gemeentevaninschrijvingZoek" || id === "naamopenbareruimteZoek" || id === "huisnummerZoek") {
            $("#gemeentevaninschrijvingZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#naamopenbareruimteZoek").css("border", "2px solid green").css("background", "lightgreen");
            $("#huisnummerZoek").css("border", "2px solid green").css("background", "lightgreen");

        }

        if (id === "identificatiecodenummeraanduidingZoek") {
            $("#identificatiecodenummeraanduidingZoek").css("border", "2px solid green").css("background", "lightgreen");
        }
    };

</script>

<script type="text/javascript">

    $(document).ready(function () {
        var aantal = 0
        $('table tbody').each(function () {
            //var num = $(this).children().length;
            // alert(num);
            aantal++;
            $(this).before("<button id='header' class='header' style:'cursor:pointer;'> Resultaat " + aantal + " </button>");
            //alert($(this).html());
            $(this).hide();
        });
        $('.header').on('click', function () {
            $(this).next().slideToggle(100);
        });
    });

</script>

<h2>IngeschrevenPersonen Resultaat</h2>

@using (Html.BeginForm("Zoek", "IngeschrevenPersonen", FormMethod.Post))
{
    <form>
        <div>
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="apiVersion" id="apiVersionZoek" name="apiVersionZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="expand" id="expandZoek" name="expandZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="fields" id="fieldsZoek" name="fieldsZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="bsn" id="bsnZoek" name="bsnZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="date" placeholder="geboortedatum" id="geboorteDatumZoek" name="geboorteDatumZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="geboorteplaats" id="geboorteplaatsZoek" name="geboorteplaatsZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="number" placeholder="geslachtsaanduiding" id="geslachtsaanduidingZoek" name="geslachtsaanduidingZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="geslachtsnaam" id="geslachtsnaamZoek" name="geslachtsnaamZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="voornamen" id="voornamenZoek" name="voornamenZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="gemeentevaninschrijving(code)" id="gemeentevaninschrijvingZoek" name="gemeentevaninschrijvingZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="huisletter" id="huisletterZoek" name="huisletterZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="number" placeholder="huisnummer" id="huisnummerZoek" name="huisnummerZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="huisnummertoevoeging" id="huisnummertoevoegingZoek" name="huisnummertoevoegingZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="identificatiecodenummeraanduiding" id="identificatiecodenummeraanduidingZoek" name="identificatiecodenummeraanduidingZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="naamopenbareruimte" id="naamopenbareruimteZoek" name="naamopenbareruimteZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="postcode" id="postcodeZoek" name="postcodeZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="text" placeholder="voorvoegsel" id="voorvoegselZoek" name="voorvoegselZoek">
            <input onfocus="colorRelevant(this.id)" class="searchBox" type="checkbox" title="inclOverleden" placeholder="inclusiefoverledenpersonen" id="inclusiefoverledenpersonenZoek" name="inclusiefoverledenpersonenZoek">

            <button type="submit">Zoek</button>
        </div>
    </form>
}

<table class="table">
    <thead>
        <tr>
            <th>@Html.ValidationMessage("Oei")</th>
            @if (ViewBag.ResponseError != null)
            {
                @ViewBag.ResponseError;
            }
        </tr>
    </thead>
    @if (ViewBag.ResponseError == null)
    {
        @foreach (var modelItem in Model)
        {
            <tbody>
                <br />

                @foreach (var modelItemProperty in typeof(Bip.IngeschrevenPersoon).GetProperties().ToList())
                {
                    <tr>
                        <td style="font-weight:600">@Html.DisplayFor(m => modelItemProperty.Name)</td>
                        <td>@modelItemProperty.GetValue(modelItem)</td>
                    </tr>

                    if ((!modelItemProperty.PropertyType.Namespace.StartsWith("System") || modelItemProperty.PropertyType.Namespace.Contains("Collection")) && !modelItemProperty.PropertyType.Name.Contains("IDictionary"))
                    {
                        @foreach (var subProperty in modelItemProperty.PropertyType.GetProperties().ToList())
                        {
                            var subPropertyObject = @ReturnProp(modelItemProperty.Name, modelItem);
                            Object subPropertyValue = null;

                            if (modelItemProperty.PropertyType.Name.Contains("Collection"))
                            {
                                var collectionInSubproperty = modelItemProperty.GetValue(modelItem);
                                if (collectionInSubproperty != null)
                                {
                                    var collection = ReturnIEnumerable(collectionInSubproperty);

                                    foreach (var subPropertyCollectionItem in collection)
                                    {
                                        foreach (var propertyOfSubPropertyCollectionItem in subPropertyCollectionItem.GetType().GetProperties().ToList())
                                        {
                                            <tr>
                                                <td style="color:lightslategray; font-size:80%"><i>@Html.DisplayFor(m => propertyOfSubPropertyCollectionItem.Name)</i></td>
                                                <td style="color:lightslategray; font-size:80%">@propertyOfSubPropertyCollectionItem.GetValue(subPropertyCollectionItem)</td>
                                            </tr>
                                        }
                                    }
                                }
                            }

                            else if (subPropertyObject != null)
                            {
                                subPropertyValue = subPropertyObject.GetType().GetProperty(subProperty.Name).GetValue(subPropertyObject, null);
                            }

                            <tr>
                                <td><i>@Html.DisplayFor(m => subProperty.Name)</i></td>
                                <td>@subPropertyValue</td>
                            </tr>
                        }
                    }
                }

            </tbody>
        }
    }
</table>
